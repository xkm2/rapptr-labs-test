{"version":3,"sources":["pages/login.tsx","components/to-do/ToDoItem.tsx","components/to-do/ToDoList.tsx","pages/to-do.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoginPage","useState","email","setEmail","emailMessage","setEmailMessage","emailValid","isEmailValid","pass","setPass","passMessage","setPassMessage","passValid","isPassValid","valid","isValid","serverMessage","setServerMessage","validate","history","useHistory","useEffect","className","style","backgroundImage","onSubmit","e","preventDefault","formData","FormData","append","fetch","method","body","then","response","ok","json","data","sessionStorage","user_creation_epoch","user_email","user_id","user_is_active","user_is_new","user_last_active_epoch","user_profile_image","user_token","user_username","push","alert","type","value","placeholder","onChange","input","message","test","toLowerCase","length","join","validateEmail","target","borderColor","icon","faUser","validatePass","faLock","disabled","ToDoItem","item","index","del","editItem","deleteItem","edit","setEdit","todo","setTodo","deleted","setDel","saveEdit","display","maxLength","faSave","onClick","faEdit","faTrash","ToDoList","list","setList","search","i","map","j","includes","ToDoPage","setSearch","localList","localStorage","getItem","JSON","parse","setItem","stringify","to","faSearch","faPlus","size","concat","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAgIeA,EA1HG,WACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAmCJ,oBAAS,GAA5C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAiCV,oBAAS,GAA1C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAyBZ,oBAAS,GAAlC,mBAAOa,EAAP,KAAcC,EAAd,KACA,EAA0Cd,mBAAS,IAAnD,mBAAOe,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,WACbH,EAAQT,GAAcM,IAoEtBO,EAAUC,cAOd,OANAC,qBAAU,WACNH,MAGD,CAACZ,EAAYM,IAGZ,qBAAKU,UAAU,kBAAkBC,MAAO,CAAEC,gBAAiB,yBAA3D,SACI,uBAAMC,SA5CO,SAACC,GAElB,GADAA,EAAEC,iBACGb,EAAL,CAIAC,GAAQ,GACR,IAAMa,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAS5B,GACzB0B,EAASE,OAAO,WAAYtB,GAE5BuB,MAAM,yDAA0D,CAC5DC,OAAQ,OACRC,KAAML,IACPM,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACT,OAAOD,EAASE,OAIpB,MAFApB,EAAiB,4DACjBC,IACMiB,KACPD,MAAK,SAAAI,GACJC,eAAeC,oBAAsBF,EAAKE,oBAC1CD,eAAeE,WAAaH,EAAKG,WACjCF,eAAeG,QAAUJ,EAAKI,QAC9BH,eAAeI,eAAiBL,EAAKK,eACrCJ,eAAeK,YAAcN,EAAKM,YAClCL,eAAeM,uBAAyBP,EAAKO,uBAC7CN,eAAeO,mBAAqBR,EAAKQ,mBACzCP,eAAeQ,WAAaT,EAAKS,WACjCR,eAAeS,cAAgBV,EAAKU,cACpC7B,EAAQ8B,KAAK,kBA5BbC,MAAM,kBAyCN,UACI,6CACA,0CAEI,uBACIC,KAAK,OACLC,MAAOlD,EACPmD,YAAY,sBACZC,SAAU,SAAA5B,GAAC,OAlFT,SAAC6B,GACnBpD,EAASoD,GACT,IAAIC,EAAoB,GACpB1C,GAAQ,EACD,wJACH2C,KAAKF,EAAMG,iBACfF,EAAQP,KAAK,qBACbnC,GAAQ,GAERyC,EAAMI,OAAS,KACfH,EAAQP,KAAK,2CACbnC,GAAQ,GAEZT,EAAgBmD,EAAQI,KAAK,SAC7BrD,EAAaO,GAoEkB+C,CAAcnC,EAAEoC,OAAOV,QACtC7B,MAAO,CAAEwC,YAAazD,GAAwB,KAAVJ,EAAe,2BAA6B,SAEpF,cAAC,IAAD,CAAiBoB,UAAU,OAAO0C,KAAMC,MACxC,4BAAI7D,OAER,6CAEI,uBACI+C,KAAK,WACLC,MAAO5C,EACP6C,YAAY,gCACZC,SAAU,SAAA5B,GAAC,OA7EV,SAAC6B,GAClB9C,EAAQ8C,GAER,IAAIC,EAAoB,GACpB1C,GAAQ,GACRyC,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,MACnCH,EAAQP,KAAK,2EACbnC,GAAQ,GAEZH,EAAe6C,EAAQI,KAAK,SAC5B/C,EAAYC,GAmEmBoD,CAAaxC,EAAEoC,OAAOV,QACrC7B,MAAO,CAAEwC,YAAanD,GAAsB,KAATJ,EAAc,2BAA6B,SAElF,cAAC,IAAD,CAAiBc,UAAU,OAAO0C,KAAMG,MACxC,4BAAIzD,OAGR,uBAAOY,UAAU,SAAS6B,KAAK,SAASC,MAAM,QAAQgB,UAAWtD,IACjE,mBAAGQ,UAAU,SAAb,SAAuBN,UCxDxBqD,G,MAtDmB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAE7D,EAAwBzE,mBAAkB,KAATqE,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwB3E,mBAASqE,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA0B7E,mBAASuE,GAAnC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,SAACvD,GACdA,EAAEC,iBACEkD,EAAKlB,OAAS,IACdc,EAASF,EAAOM,GAChBD,GAAQ,KAahB,OACI,qBAAKtD,UAAU,OAAOC,MAAO,CAAE2D,QAASH,EAAU,OAAS,WAA3D,SAGQJ,EACI,uBAAMlD,SAAUwD,EAAhB,UACI,uBAAO3D,UAAU,OACb6B,KAAK,OACLC,MAAOyB,EACPM,UAAW,GACX9B,YAAa,4BACbC,SAAU,SAAA5B,GAAC,OAAIoD,EAAQpD,EAAEoC,OAAOV,UAGpC,cAAC,IAAD,CAAiB9B,UAAU,OAAO0C,KAAMoB,IAAQC,QAASJ,OAG7D,sBAAK3D,UAAU,OAAf,UACI,4BAAIgD,IACJ,cAAC,IAAD,CAAiBN,KAAMsB,IAAQD,QA7BtC,SAAC3D,GACVA,EAAEC,iBACFiD,GAAQ,MA4BQ,cAAC,IAAD,CAAiBZ,KAAMuB,IAASF,QA1BrC,SAAC3D,GACZA,EAAEC,iBACF+C,EAAWH,GACXS,GAAO,aC+BAQ,EAtDmB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAG1ClB,EAAW,SAACmB,EAAWf,GAEzBa,GAAQ,WAQJ,OAPUD,EAAKI,KAAI,SAACvB,EAAMwB,GACtB,OAAIA,IAAMF,EACC,CAAEf,KAAMA,EAAML,IAAKF,EAAKE,KAExBF,SAMjBI,EAAa,SAACkB,GAEhBF,GAAQ,WAQJ,OAPUD,EAAKI,KAAI,SAACvB,EAAMwB,GACtB,OAAIA,IAAMF,EACC,CAAEf,KAAMP,EAAKO,KAAML,KAAK,GAExBF,SAOvB,OACI,qBAAKhD,UAAU,OAAf,SAEQmE,EAAKI,KAAI,SAACvB,EAAMC,GACZ,OAAID,EAAKO,KAAKnB,cAAcqC,SAASJ,KAAYrB,EAAKE,IAE9C,cAAC,EAAD,CAEIA,IAAKF,EAAKE,IACVD,MAAOA,EACPD,KAAMA,EAAKO,KACXJ,SAAUA,EACVC,WAAYA,GALPH,GASL,mCCJjByB,EA3CE,WACb,MAA4B/F,mBAAS,IAArC,mBAAO0F,EAAP,KAAeM,EAAf,KACA,EAAwBhG,oBAAS,WAC7B,IAAMiG,EAAYC,aAAaC,QAAQ,QACvC,OAAIF,EAC4BG,KAAKC,MAAMJ,GAGpC,CAAC,CAAErB,KAAM,GAAIL,KAAK,OAN7B,mBAAOiB,EAAP,KAAaC,EAAb,KAgBA,OAJArE,qBAAU,WACN8E,aAAaI,QAAQ,OAAQF,KAAKG,UAAUf,MAC7C,CAACA,IAGA,sBAAKnE,UAAU,iBAAiBC,MAAO,CAAEC,gBAAiB,yBAA1D,UACI,+CACA,cAAC,IAAD,CAAMF,UAAU,SAASmF,GAAG,IAA5B,oBAGA,sBAAKnF,UAAU,QAAf,UACI,sBAAKA,UAAU,MAAf,UAEI,uBACI6B,KAAK,OACLC,MAAOuC,EACPtC,YAAY,SACZC,SAAU,SAAA5B,GAAC,OAAIuE,EAAUvE,EAAEoC,OAAOV,UAEtC,cAAC,IAAD,CAAiB9B,UAAU,SAAS0C,KAAM0C,MAC1C,cAAC,IAAD,CAAiBpF,UAAU,MAAM0C,KAAM2C,IAAQC,KAAK,KAAKvB,QAvBzD,WACZK,EAAQD,EAAKoB,OAAO,CAAC,CAAEhC,KAAM,GAAIL,KAAK,YAwB9B,cAAC,EAAD,CAAUiB,KAAMA,EAAMC,QAASA,EAASC,OAAQA,W,MC1BjDmB,MAZf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjH,IACjC,cAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,SAASC,UAAWjH,IACtC,cAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,SAASC,UAAWjB,UCE/BkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d8f851d3.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock } from '@fortawesome/free-solid-svg-icons'\r\nimport '../styles/login.scss';\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailMessage, setEmailMessage] = useState(\"\");\r\n    const [emailValid, isEmailValid] = useState(false);\r\n    const [pass, setPass] = useState(\"\");\r\n    const [passMessage, setPassMessage] = useState(\"\");\r\n    const [passValid, isPassValid] = useState(false);\r\n    const [valid, isValid] = useState(false);\r\n    const [serverMessage, setServerMessage] = useState(\"\");\r\n\r\n    const validate = () => {\r\n        isValid(emailValid && passValid)\r\n    }\r\n\r\n    const validateEmail = (input: string) => {\r\n        setEmail(input);\r\n        let message: string[] = [];\r\n        let valid = true;\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(input.toLowerCase())) {\r\n            message.push(\"Not a Valid Email\")\r\n            valid = false;\r\n        };\r\n        if (input.length > 50) {\r\n            message.push(\"Email Should be less than 50 Characters\")\r\n            valid = false;\r\n        };\r\n        setEmailMessage(message.join(\"\\r\\n\"));\r\n        isEmailValid(valid);\r\n    }\r\n\r\n    const validatePass = (input: string) => {\r\n        setPass(input);\r\n\r\n        let message: string[] = [];\r\n        let valid = true;\r\n        if (input.length < 4 || input.length > 16) {\r\n            message.push(\"Password should be at least 4 characters and no more than 16 characters\")\r\n            valid = false;\r\n        }\r\n        setPassMessage(message.join(\"\\r\\n\"));\r\n        isPassValid(valid);\r\n    }\r\n\r\n    const handelSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        if (!valid) {\r\n            alert(\"Invalid Login\")\r\n            return\r\n        }\r\n        isValid(false);\r\n        const formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"password\", pass);\r\n\r\n        fetch('http://dev.rapptrlabs.com/Tests/scripts/user-login.php', {\r\n            method: 'POST',\r\n            body: formData\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            setServerMessage('The server could not be reached. Please Try again later.');\r\n            validate();\r\n            throw response;\r\n        }).then(data => {\r\n            sessionStorage.user_creation_epoch = data.user_creation_epoch;\r\n            sessionStorage.user_email = data.user_email;\r\n            sessionStorage.user_id = data.user_id;\r\n            sessionStorage.user_is_active = data.user_is_active;\r\n            sessionStorage.user_is_new = data.user_is_new;\r\n            sessionStorage.user_last_active_epoch = data.user_last_active_epoch;\r\n            sessionStorage.user_profile_image = data.user_profile_image;\r\n            sessionStorage.user_token = data.user_token;\r\n            sessionStorage.user_username = data.user_username;\r\n            history.push('/to-do')\r\n        })\r\n\r\n    }\r\n    let history = useHistory()\r\n    useEffect(() => {\r\n        validate();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [emailValid, passValid])\r\n\r\n    return (\r\n        <div className='login-container' style={{ backgroundImage: \"url('./IMG_0235.jpg')\" }}>\r\n            <form onSubmit={handelSubmit}>\r\n                <h1>Rapptr Labs</h1>\r\n                <label >\r\n                    Email\r\n                    <input\r\n                        type=\"text\"\r\n                        value={email}\r\n                        placeholder=\"user@rapptrlabs.com\"\r\n                        onChange={e => validateEmail(e.target.value)}\r\n                        style={{ borderColor: emailValid || email === '' ? 'rgba(47, 130, 255, 0.82)' : 'red' }}\r\n                    />\r\n                    <FontAwesomeIcon className='user' icon={faUser} />\r\n                    <p>{emailMessage}</p>\r\n                </label>\r\n                <label >\r\n                    Password\r\n                    <input\r\n                        type=\"password\"\r\n                        value={pass}\r\n                        placeholder=\"Must be at least 4 characters\"\r\n                        onChange={e => validatePass(e.target.value)}\r\n                        style={{ borderColor: passValid || pass === '' ? 'rgba(47, 130, 255, 0.82)' : 'red' }}\r\n                    />\r\n                    <FontAwesomeIcon className='lock' icon={faLock} />\r\n                    <p>{passMessage}</p>\r\n                </label>\r\n\r\n                <input className=\"submit\" type=\"submit\" value=\"Login\" disabled={!valid} />\r\n                <p className='server'>{serverMessage}</p>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash, faSave } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface Props {\r\n    item: any;\r\n    index: number;\r\n    del: boolean;\r\n    editItem: any;\r\n    deleteItem: any;\r\n}\r\n\r\nconst ToDoItem: React.FC<Props> = ({ item, index, del, editItem, deleteItem }) => {\r\n\r\n    const [edit, setEdit] = useState(item === '' ? true : false);\r\n    const [todo, setTodo] = useState(item);\r\n    const [deleted, setDel] = useState(del);\r\n\r\n    const saveEdit = (e: any) => {\r\n        e.preventDefault();\r\n        if (todo.length > 0) {\r\n            editItem(index, todo);\r\n            setEdit(false);\r\n        }\r\n    }\r\n    const Edit = (e: any) => {\r\n        e.preventDefault();\r\n        setEdit(true);\r\n    }\r\n    const Delete = (e: any) => {\r\n        e.preventDefault();\r\n        deleteItem(index);\r\n        setDel(true);\r\n    }\r\n\r\n    return (\r\n        <div className='item' style={{ display: deleted ? 'none' : 'inherit' }} >\r\n            {\r\n\r\n                edit ?\r\n                    <form onSubmit={saveEdit}>\r\n                        <input className=\"text\"\r\n                            type=\"text\"\r\n                            value={todo}\r\n                            maxLength={50}\r\n                            placeholder={'List Item Cannot Be Empty'}\r\n                            onChange={e => setTodo(e.target.value)}\r\n                        />\r\n\r\n                        <FontAwesomeIcon className=\"save\" icon={faSave} onClick={saveEdit} />\r\n                    </form>\r\n                    :\r\n                    <div className=\"todo\">\r\n                        <p>{item}</p>\r\n                        <FontAwesomeIcon icon={faEdit} onClick={Edit} />\r\n                        <FontAwesomeIcon icon={faTrash} onClick={Delete} />\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ToDoItem;","import React from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\ninterface Props {\r\n    search: string;\r\n    list: any[];\r\n    setList: any;\r\n}\r\n\r\nconst ToDoList: React.FC<Props> = ({ list, setList, search }) => {\r\n\r\n\r\n    const editItem = (i: number, todo: string) => {\r\n        var newlist: any[] = [''];\r\n        setList(() => {\r\n            newlist = list.map((item, j) => {\r\n                if (j === i) {\r\n                    return { todo: todo, del: item.del }\r\n                } else {\r\n                    return item\r\n                }\r\n            });\r\n            return newlist\r\n        })\r\n    }\r\n    const deleteItem = (i: number) => {\r\n        var newlist: any[] = [''];\r\n        setList(() => {\r\n            newlist = list.map((item, j) => {\r\n                if (j === i) {\r\n                    return { todo: item.todo, del: true }\r\n                } else {\r\n                    return item\r\n                }\r\n            });\r\n            return newlist\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='list'>\r\n            {\r\n                list.map((item, index) => {\r\n                    if (item.todo.toLowerCase().includes(search) && !item.del) {\r\n                        return (\r\n                            <ToDoItem\r\n                                key={index}\r\n                                del={item.del}\r\n                                index={index}\r\n                                item={item.todo}\r\n                                editItem={editItem}\r\n                                deleteItem={deleteItem}\r\n                            />\r\n                        )\r\n                    } else {\r\n                        return (<></>)\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport '../styles/to-do.scss';\r\nimport ToDoList from \"../components/to-do/ToDoList\";\r\n\r\n\r\nconst ToDoPage = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [list, setList] = useState(() => {\r\n        const localList = localStorage.getItem('list');\r\n        if (localList) {\r\n            const initialValue: any[] = JSON.parse(localList);\r\n            return initialValue\r\n        }\r\n        return [{ todo: '', del: true }]\r\n    })\r\n\r\n    const addToDo = () => {\r\n        setList(list.concat([{ todo: '', del: false }]));\r\n    }\r\n    useEffect(() => {\r\n        localStorage.setItem('list', JSON.stringify(list));\r\n    }, [list])\r\n\r\n    return (\r\n        <div className='todo-container' style={{ backgroundImage: \"url('./IMG_0235.jpg')\" }}>\r\n            <h1>My To-Do List</h1>\r\n            <Link className='logout' to='/'>\r\n                Logout\r\n            </Link>\r\n            <div className='to-do'>\r\n                <div className='top'>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        value={search}\r\n                        placeholder=\"search\"\r\n                        onChange={e => setSearch(e.target.value)}\r\n                    />\r\n                    <FontAwesomeIcon className='search' icon={faSearch} />\r\n                    <FontAwesomeIcon className='new' icon={faPlus} size=\"2x\" onClick={addToDo} />\r\n                </div>\r\n                <ToDoList list={list} setList={setList} search={search} />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginPage from './pages/login';\nimport ToDoPage from './pages/to-do';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/' component={LoginPage} />\n        <Route exact path='/login' component={LoginPage} />\n        <Route exact path='/to-do' component={ToDoPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}